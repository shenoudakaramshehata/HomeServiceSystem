@page
@model HomeService.Areas.Admin.Pages.Units.IndexModel
@{
}
<div class="page-content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-header d-flex justify-content-between align-items-center">
                            @sharedResource["Unit"]
                        </h2>
                    </div>
                    <div class="card-body">


                        @(Html.DevExtreme().DataGrid<HomeService.Models.Unit>()
.DataSource(ds => ds.Mvc()
.Controller("Units")
.LoadAction("Get")
.InsertAction("Post")
.UpdateAction("Put")
.DeleteAction("Delete")
.Key("UnitId")


)
.RemoteOperations(true)
.Columns(columns => {
    columns.AddFor(m => m.UnitTile).Caption(sharedResource["Name"]);
    columns.AddFor(m => m.AreaId).Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("Units").LoadAction("AreaLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
    
    ).Caption(sharedResource["Area"]);

    columns.AddFor(m => m.UnitGroupId).Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("Units").LoadAction("UnitGroupLookup").Key("Value"))
    .ValueExpr("Value") 
    .DisplayExpr("Text")
    
    ).Caption(sharedResource["UnitGroup"]);

    columns.AddFor(m => m.Block).Caption(sharedResource["Block"]);
    columns.AddFor(m => m.Avenue).Caption(sharedResource["Avenue"]);
    columns.AddFor(m => m.Street).Caption(sharedResource["Street"]);
    columns.AddFor(m => m.BuildingNo).Caption(sharedResource["BuildingNo"]);
    columns.AddFor(m => m.Floor).Caption(sharedResource["Floor"]);
    columns.AddFor(m => m.Flat).Caption(sharedResource["Flat"]);
    columns.AddFor(m => m.Remarks).Caption(sharedResource["Remarks"]);



}

)

.Editing(e => e.Mode(GridEditMode.Popup)
.Texts(c => c
.CancelRowChanges(sharedResource["Cancel"])
.SaveRowChanges(sharedResource["Save"]).EditRow(sharedResource["Edit"])
.DeleteRow(sharedResource["Delete"])
.ConfirmDeleteMessage(sharedResource["ConfirmDeleteMessage"])
.AddRow(sharedResource["Add"]))


.AllowUpdating(true)
.AllowAdding(true)
.AllowDeleting(true)
.UseIcons(true)


.Popup(p => p
.Title(sharedResource["Unit"])
.ShowTitle(true)

.RtlEnabled(bool.Parse(sharedResource["ArLang"]))
.Height(500)
.Width(800)

).Form(f => f.Items(items =>
{
    items.AddGroup()
    .ColCount(2)
    .ColSpan(2)
    .Items(groupItems =>
    {
        groupItems.AddSimple().DataField("UnitTile").IsRequired(true);
        groupItems.AddSimple().DataField("AreaId").IsRequired(true);
        groupItems.AddSimple().DataField("UnitGroupId").IsRequired(true);
        groupItems.AddSimple().DataField("Block").IsRequired(true);
        groupItems.AddSimple().DataField("Avenue").IsRequired(true);
        groupItems.AddSimple().DataField("BuildingNo").IsRequired(true);
        groupItems.AddSimple().DataField("Floor").IsRequired(true);
        groupItems.AddSimple().DataField("Flat").IsRequired(true);
        groupItems.AddSimple().DataField("Remarks").Editor(c=>c.TextArea());


    });



}))

)
    .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.Visible(true);
                            pager.DisplayMode(GridPagerDisplayMode.Full);
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                            pager.ShowInfo(true);
                            pager.ShowNavigationButtons(true);

                        })
        .HeaderFilter(headerFilter => headerFilter.Visible(true)).ShowColumnLines(false)
                            .ShowRowLines(true)
                            .RowAlternationEnabled(true)
                            .AllowColumnReordering(true)
                            .ShowRowLines(true)
                            .ShowColumnLines(true)
                            .ShowBorders(true)
                            .SearchPanel(searchPanel => searchPanel
                            .Visible(true)
                            .Width(240)
                            .Placeholder(sharedResource["SearchTxt"]))
                            .RemoteOperations(true)
                            .RtlEnabled(bool.Parse(sharedResource["ArLang"]))
)

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>