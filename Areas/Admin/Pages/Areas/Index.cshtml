@page
@model HomeService.Areas.Admin.Pages.Areas.IndexModel
@{
}

<div class="page-content">
    <div class="container-fluid">

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-header d-flex justify-content-between align-items-center">
                            @sharedResource["Areas"]
                        </h2>
                    </div>
                    <div class="card-body">
                        <div class="Filter-side"> 
                            @(Html.DevExtreme().SelectBox().RtlEnabled(bool.Parse(sharedResource["ArLang"]))
        .DataSource(Model.cityLst)
.ValueExpr(nameof(HomeService.Models.City.CityId))
.DisplayExpr(Model.title)
        .Value(0)
        .OnValueChanged(@<text>
            function(data) {
                var dataGrid = $("#gridContainer").dxDataGrid("instance");
                if (data.value == 0)
                    dataGrid.clearFilter();
                else
                    dataGrid.filter(["CityId", "=",data.value]);
            }
        </text>)
    )
                            </div>
                            @(Html.DevExtreme().DataGrid<HomeService.Models.Area>()
        .ID("gridContainer")
    .DataSource(ds => ds.Mvc()
    .Controller("Areas")
    .LoadAction("Get")
    .InsertAction("Post")
    .UpdateAction("Put")
    .DeleteAction("Delete")
    .Key("AreaId")


    )
    .RemoteOperations(true)
    .Columns(columns => {
    columns.AddFor(m => m.AreaTlAr).Caption(sharedResource["TlAr"]);
    columns.AddFor(m => m.AreaTlEn).Caption(sharedResource["TlEn"]);
    columns.AddFor(m => m.CityId).Lookup(lookup => lookup
    .DataSource(ds => ds.WebApi().Controller("Areas").LoadAction("CityLookup").Key("Value"))
    .ValueExpr("Value")
    .DisplayExpr("Text")
    ).Caption(sharedResource["City"]);

    }

    )

    .Editing(e => e.Mode(GridEditMode.Popup)
    .Texts(c => c
    .CancelRowChanges(sharedResource["Cancel"])
    .SaveRowChanges(sharedResource["Save"]).EditRow(sharedResource["Edit"])
    .DeleteRow(sharedResource["Delete"])
    .ConfirmDeleteMessage(sharedResource["ConfirmDeleteMessage"])
    .AddRow(sharedResource["Add"]))


    .AllowUpdating(true)
    .AllowAdding(true)
    .AllowDeleting(true)
    .UseIcons(true)


    .Popup(p => p
    .Title(sharedResource["Area"])
    .ShowTitle(true)
    .MaxWidth(750)
    .RtlEnabled(bool.Parse(sharedResource["ArLang"]))


    .Height(250)).Form(f => f.Items(items =>
    {
    items.AddGroup()
    .ColCount(2)
    .ColSpan(2)
    .Items(groupItems =>
    {
    groupItems.AddSimple().DataField("AreaTlAr").IsRequired(true);
    groupItems.AddSimple().DataField("AreaTlEn").IsRequired(true);
    groupItems.AddSimple().DataField("CityId").IsRequired(true);
    });



    }))

    )
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
    pager.Visible(true);
    pager.DisplayMode(GridPagerDisplayMode.Full);
    pager.ShowPageSizeSelector(true);
    pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
    pager.ShowInfo(true);
    pager.ShowNavigationButtons(true);

    })
    .HeaderFilter(headerFilter => headerFilter.Visible(true)).ShowColumnLines(false)
    .ShowRowLines(true)
    .RowAlternationEnabled(true)
    .AllowColumnReordering(true)
    .ShowRowLines(true)
    .ShowColumnLines(true)
    .ShowBorders(true)
    .SearchPanel(searchPanel => searchPanel
    .Visible(true)
    .Width(240)
    .Placeholder(sharedResource["SearchTxt"]))
    .RemoteOperations(true)
    .RtlEnabled(bool.Parse(sharedResource["ArLang"]))
    )

                        </div>
                    </div>
            </div>
        </div>
    </div>
</div>